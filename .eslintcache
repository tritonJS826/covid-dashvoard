[{"/home/triton/repositories/covid-dashvoard/src/redux/redux-store.js":"1","/home/triton/repositories/covid-dashvoard/src/redux/types/action-types.ts":"2","/home/triton/repositories/covid-dashvoard/src/components/App/App.tsx":"3","/home/triton/repositories/covid-dashvoard/src/redux/reducers/index.ts":"4","/home/triton/repositories/covid-dashvoard/src/components/App/index.ts":"5","/home/triton/repositories/covid-dashvoard/src/index.tsx":"6","/home/triton/repositories/covid-dashvoard/src/redux/creators/appStore.ts":"7","/home/triton/repositories/covid-dashvoard/src/redux/reducers/appStore.reducer.ts":"8","/home/triton/repositories/covid-dashvoard/src/redux/creators/appStoreEffects.ts":"9"},{"size":299,"mtime":1607478842177,"results":"10","hashOfConfig":"11"},{"size":458,"mtime":1607826462932,"results":"12","hashOfConfig":"13"},{"size":1090,"mtime":1607825275495,"results":"14","hashOfConfig":"13"},{"size":241,"mtime":1607818830465,"results":"15","hashOfConfig":"13"},{"size":456,"mtime":1607825238139,"results":"16","hashOfConfig":"13"},{"size":360,"mtime":1607548083861,"results":"17","hashOfConfig":"13"},{"size":1328,"mtime":1607822574550,"results":"18","hashOfConfig":"13"},{"size":1991,"mtime":1607823287648,"results":"19","hashOfConfig":"13"},{"size":1265,"mtime":1607827319958,"results":"20","hashOfConfig":"13"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mn5ayo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"111seqn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/home/triton/repositories/covid-dashvoard/src/redux/redux-store.js",[],"/home/triton/repositories/covid-dashvoard/src/redux/types/action-types.ts",[],"/home/triton/repositories/covid-dashvoard/src/components/App/App.tsx",[],"/home/triton/repositories/covid-dashvoard/src/redux/reducers/index.ts",[],"/home/triton/repositories/covid-dashvoard/src/components/App/index.ts",[],"/home/triton/repositories/covid-dashvoard/src/index.tsx",[],"/home/triton/repositories/covid-dashvoard/src/redux/creators/appStore.ts",[],"/home/triton/repositories/covid-dashvoard/src/redux/reducers/appStore.reducer.ts",[],"/home/triton/repositories/covid-dashvoard/src/redux/creators/appStoreEffects.ts",["40"],"import { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { ISummaryData, ISummaryResponse } from '../../interfaces/redux/appStore';\n\nimport {\n  setSummaryData,\n} from './appStore';\n\nexport const getCovidSummary = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => async (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>,\n): Promise<void> => {\n  const responseRaw = await fetch('https://api.covid19api.com/summary');\n\n  if (responseRaw.ok) {\n    const response: ISummaryResponse = await responseRaw.json();\n\n    const summaryData: Array<ISummaryData> = response.Countries;\n    const {\n      NewConfirmed,\n      TotalConfirmed,\n      NewDeaths,\n      TotalDeaths,\n      NewRecovered,\n      TotalRecovered,\n    } = response.Global;\n    const date = response.Date;\n\n    const global: ISummaryData = {\n      country: 'GLOBAL',\n      countryCode: '',\n      slug: '',\n      newConfirmed: NewConfirmed,\n      totalConfirmed: TotalConfirmed,\n      newDeaths: NewDeaths,\n      totalDeaths: TotalDeaths,\n      newRecovered: NewRecovered,\n      totalRecovered: TotalRecovered,\n      date,\n    };\n\n    dispatch(setSummaryData([...summaryData, global]));\n  } else {\n    console.log('fetchError');\n  }\n};\n\nexport default getCovidSummary;\n",{"ruleId":"41","severity":1,"message":"42","line":43,"column":5,"nodeType":"43","messageId":"44","endLine":43,"endColumn":16},"no-console","Unexpected console statement.","MemberExpression","unexpected"]